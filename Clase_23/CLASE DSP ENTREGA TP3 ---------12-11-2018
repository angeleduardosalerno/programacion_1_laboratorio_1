CLASE DSP ENTREGA TP3 ---------12/11/2018


VER YOUTUBE, LISTAS SIMPLEMENTE ENLAZADAS EN C!!!! BUSCAR COMO LISTAS ENLAZADAS!!!


LINKED LIST ES PARA MANEJAR LA LISTA DE PUNTEROS::!!!!!!!!!!!!!!!


NODO ES UN ELEMENTO, P NEXT ES PROXIMO ELEMENTO....

CADA POSICION DE MEMORIA TIENE UN NEXT DEL QUE SIGUE, O SEA EL NEXT SIRVE PARA INDICAR CUAL ES EL QUE SIGUE YA QUE UNO PUEDE QUE ESTE VACIO, EL P NEXT TE INDICA EL PROXIMO LÑUGAR QUE ESTA LIBRE...! 


HAY QUE COMENTAR PROBAR, CUANDO DA 100 LA FUNCION YA ESTA HECHA OK!!!

SINO DA 100 NO DA OK, LAS FUNCIONES PARA PROBAR YA ESTAN HECHAS, TENES QUE COMENTAR Y VAS PASANDO POR TEST

TODOS LOS PUNTEROS TIENEN QUE ESTAN != NULL SINO CHEQUEAS NULL NUNCA TE VA A DAR AL 100%



int (*pFunc)(void* ,void*) ESTO ES UN PUNTERO A UNA FUNCION *******************

RECIBE 2 PUNTEROS DE TIPO VOID Y UN PUNTERO A DICHA FUNCION

if(((Persona*)pPersonA)->edad > ((Persona*)pPersonB)->edad) ORDENA FLECHA PERSONA

EN LA NUSTRA TIENE Q SER UN STRCMP!!!!!


int ll_sort(LinkedList* this, int (*pFunc)(void* ,void*), int order)
{
//.......
}


r = ll_sort(lista, comparaPersonas,1);

int comparaPersonas(void* pPersonA,void* pPersonB) ***************** ESTA FUNCION CUMPLE EL PARAMETRO DE LA PUNTERO A FUNCION!!
{
if(((Persona*)pPersonA)->edad > ((Persona*)pPersonB)->edad)
{
return 1;
}
if(((Persona*)pPersonA)->edad < ((Persona*)pPersonB)->edad)
{
return -1;
}
return 0;
}



DENTRO DE LA FUNCION COMPARA QUE LLAMA HAY QUE HACER LOS ORDENAMIENTOS!!!

HAY QUE LOGRAR HACER UNA FUNCION LL ORDER QUE LOS PARAMETROS RECIBIDOS SEAN 

LL LENGH,  EL TAMAÑO SE OBTIENE CON SIZE!!!


dfernandez@fra.utn.edu.ar



FPRINTF ES PARA TEXTO!!!! ***********************************!!*******************************************

EL DATO ENTERO LO TRANSFORMA A CADENA Y LO GUARDA EN EL ARCHIVO!!

PARA BINARIO FWRITE!!!!


BINARIO EL ARCHIVO .DAT O .BIN, TIENE QUE SER DISTINTO AL DE TEXTO

EN BINARIO SE USA PARA LEER FREAD Y PARA ESCRIBIR SE USA FWRITE



EL DE TEXTO ES .CSV ****** ESTO NO ES UNA PLANILLA DE EXCEL, SE ABRE EN DIFERENTES EDITORES OJO!!!!!!!

O SEA EN EL EXCEL NO TE VA A FIGURAR GUARDADO!!!! OJOOOOOOOOOOOOOOO!!!

CHEQUEARLO EN EL ARCHIVOOO!!!!




EN TEXTO SE LEE CON FSCANF (SIMIL PARSEO)
Y SE ESCRIBE CON FPRINTF 


OJOOOOOOOOOOOOOOOOOOO!!!!!*************************



*************************************************************************************************

SE TIENEN 2 ESTRUCTURAS

LA PRIMERA TIENE UN PUNTERO A LA ESTRUCTURA

Y LA SEGUNDA

TIENE UN PUNTERO DE TIPO NODE

LA FUNCIONE GET NODE RECIBE UN PUNTERO A LINKED LIST, POR LO Q SE TIENE QUE OBTENER ES EL PRIMER NODO

EN GET NODE, SE CONTROLA Q EL I SEA > 0 Y QUE EL INDICE SEA MAYOR A LENG
Y HAY QUE ASIGNARLE THIS A P NODO

WHILE (LE TENES QUE PASAR AL ANTERIOR LO DE ESE)




HAY 2 ESTRUCTURAS EN LINKED LIST

LA PRIMERA ESTRUCTURA ES PARA EL NODO SIGUIENTE, 

LA LINKED LIST ES PARA LA ANTERIOR!!!



****************************************

linked list es un alista que almacena doble punteros pero no es un array con doble punteros ojo, 

es un espacio reservado en memoria q tiene un puntero que el primero apunta al siguiente, el del medio apaunta al anterior y al siguiente, y el ultimo apunta al anterior.


el puntero del medio apunta al anterior (PNODE - PREVIOUS NODE) Y AL SIGUIENTE (P NEXT NODE...)....

TIENE EL ESPACIO DONDE GUARDA LOS DATOS Y EL PUNTERO A LA SIGUIENTE ESTRUCTURA....!!!

LOS DATOS SON DONDE SE GUARDA LA INFORMACION, POR EJEMPLO LOS DATOS DE LOS EMPLEADOS ETC...


